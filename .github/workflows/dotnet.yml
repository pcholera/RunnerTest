name: .NET

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Set VERSION variable
      id: buildnumber
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}

    - uses: rishabhgupta/split-by@v1
      id: split
      with:
          string: ${{ github.ref_name }}
          split-by: '/'

    - name : Get Release Version Number
      id: releaseNumber
      #if: "steps.split.outputs._0 == 'release'"
      #run: echo "::set-output name=number::${{ steps.split.outputs._1 }}"
      run: |
        if [[ "${{ steps.split.outputs._0 }}" == "release" ]]; then
          echo "::set-output name=number::${{ steps.split.outputs._1 }}"
        fi
        if [[ "${{ steps.split.outputs._0 }}" != "release" ]]; then
          echo "::set-output name=number::0.0"
        fi

    - name: "Print Major Minor Version"
      run: echo "Version = ${{ steps.setMajorMinorVersion.outputs.number }}"

    # - name: Restore dependencies
    #   run: |
    #     dotnet restore RunnerTest\RunnerTest.csproj
    #     dotnet restore RunnerTestProject\RunnerTestProject.csproj

    # - name: Build
    #   run: |
    #     dotnet build RunnerTest/RunnerTest.csproj --configuration Release --no-restore
    #     dotnet build RunnerTestProject/RunnerTestProject.csproj --configuration Release --no-restore

    # - name: Test
    #   run: dotnet test RunnerTestProject/RunnerTestProject.csproj --configuration Release --no-build --verbosity normal

    # - name: Pack
    #   run: dotnet pack RunnerTest/RunnerTest.csproj --configuration Release /p:Version=$vNumber.${{ steps.buildnumber.outputs.build_number }} --no-build --output .

    # - name: Push
    #   run: dotnet nuget push **/*.nupkg --no-symbols --skip-duplicate
    #   env:
    #     NUGET_AUTH_TOKEN: ${{ github.token }}
