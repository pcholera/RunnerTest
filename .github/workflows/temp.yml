name: Build

on: 
  push: 
    branches:
      - '**'
    tags:
      - 'v*.*.*'

jobs:
  buildConfig:
    name: Get Build Config
    uses: ./.github/workflows/BuildConfig.yml
    with:
      environmentName: Dev
    secrets:
      TARGETLOCATION: ${{ secrets.TARGETLOCATION }}
      TEST: ${{ secrets.TEST }}

  build:
    needs: buildConfig

    env:
      repositoryName: ${{ needs.buildConfig.outputs.repositoryName }}

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: "Print Repo Name"
      run: echo "Repo Name = ${{ env.repositoryName }}"

    - name: "Print Branch Type"
      run: echo "Branch Type = ${{ needs.buildConfig.outputs.branchType }}"

    - name: "Print Version Number"
      run: echo "Version = ${{ needs.buildConfig.outputs.buildVersion }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Ensure GitHub NuGet Source
      if: ${{ needs.buildConfig.outputs.branchType }} == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget add source https://nuget.pkg.github.com/pcholera/index.json -n github -u ${{ github.actor }}  -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Build
      run: dotnet build RunnerTestProject/RunnerTestProject.csproj --configuration Release

    - name: Test
      run: dotnet test RunnerTestProject/RunnerTestProject.csproj --configuration Release --no-build --verbosity normal

    - name: Pack
      if: ${{ needs.buildConfig.outputs.branchType }} == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet pack RunnerTest/RunnerTest.csproj --configuration Release /p:Version=${{ needs.buildConfig.outputs.buildVersion }} --no-build --output .

    - name: Push
      if: ${{ needs.buildConfig.outputs.branchType }} == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push **/*.nupkg --no-symbols --skip-duplicate --source github
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}

    - name: Cleanup Github Nuget Source
      if: always() && (${{ needs.buildConfig.outputs.branchType }} == 'main' || startsWith(github.ref, 'refs/tags/v'))
      continue-on-error: true
      run: dotnet nuget remove source github

  deploy_to_dev:
    name: Deploy To Dev
    needs: [ build, buildConfig ]
    uses: ./.github/workflows/Deploy.yml
    with:
      environmentName: "Dev"
      assemblyVersion: ${{ needs.buildConfig.outputs.buildVersion }}

  auto_merge_release_to_main:
    needs: [build, buildConfig]
    if: ${{ needs.buildConfig.outputs.branchType }} == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: main
          github_token: ${{ github.token }}
          label_name: 'automerge'
