name: Build

on: 
  push: 
    branches:
      - '**'
    tags:
      - 'v*.*.*'

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Set VERSION variable
      id: versionNumber
      if: startsWith(github.ref_name, 'v2') != true
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}

    - uses: rishabhgupta/split-by@v1
      id: split
      with:
          string: ${{ github.ref_name }}
          split-by: '/'

    - name : Get Release Version Number
      id: buildNumber
      run: |
        $name = "${{ github.ref_name }}";
        if ( $name.StartsWith('v2') ){
          $name = $name.replace('v2','2')
          echo "::set-output name=number::$name" ;
        }
        else {
          echo "::set-output name=number::0.0.${{ steps.versionNumber.outputs.build_number }}" ; 
        }

    - name: "Print Major Minor Version"
      run: echo "Version = ${{ steps.buildNumber.outputs.number }}"

    - name: Ensure GitHub NuGet Source
      if: steps.split.outputs._0 == 'main' || "${{ github.ref_name }}".StartsWith('v2')
      run: dotnet nuget add source https://nuget.pkg.github.com/pcholera/index.json -n github -u ${{ github.actor }}  -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Build
      run: dotnet build RunnerTestProject/RunnerTestProject.csproj --configuration Release

    - name: Test
      run: dotnet test RunnerTestProject/RunnerTestProject.csproj --configuration Release --no-build --verbosity normal

    - name: Pack
      if: steps.split.outputs._0 == 'main' || "${{ github.ref_name }}".StartsWith('v2')
      run: dotnet pack RunnerTest/RunnerTest.csproj --configuration Release /p:Version=${{ steps.buildNumber.outputs.number }} --no-build --output .

    - name: Push
      if: steps.split.outputs._0 == 'main' || "${{ github.ref_name }}".StartsWith('v2')
      run: dotnet nuget push **/*.nupkg --no-symbols --skip-duplicate --source github
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}

    - name: Cleanup Github Nuget Source
      if: always() && (steps.split.outputs._0 == 'main' || "${{ github.ref_name }}".StartsWith('v2'))
      continue-on-error: true
      run: dotnet nuget remove source github

    - name: Auto Merge release to main
      if: steps.split.outputs._0 == 'release'
      uses: devmasx/merge-branch@v1.3.1
      with:
        type: now
        target_branch: main
        github_token: ${{ github.token }}
