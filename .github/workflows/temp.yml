name: Build

on: 
  push: 
    branches:
      - '**'
    tags:
      - 'v*.*.*'

jobs:
  build:

    # runs-on: self-hosted
    runs-on: ubuntu-latest

    outputs:
      branchName: ${{ steps.split.outputs._0 }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1

    - name: Generate Build Number
      id: buildNumber
      if: startsWith(github.ref, 'refs/tags/v') != true
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}

    - name: Set VERSION variable
      id: versionNumber
      uses: ./.github/workflows/BuildVersion
      with:
        buildNumber: ${{ steps.buildNumber.outputs.build_number }}

    - uses: rishabhgupta/split-by@v1
      id: split
      with:
          string: ${{ github.ref_name }}
          split-by: '/'

    - name: "Print Version Number"
      run: echo "Version = ${{ steps.versionNumber.outputs.buildVersion }}"

    - name: Ensure GitHub NuGet Source
      if: steps.split.outputs._0 == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget add source https://nuget.pkg.github.com/pcholera/index.json -n github -u ${{ github.actor }}  -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Build
      run: dotnet build RunnerTestProject/RunnerTestProject.csproj --configuration Release

    - name: Test
      run: dotnet test RunnerTestProject/RunnerTestProject.csproj --configuration Release --no-build --verbosity normal

    - name: Pack
      if: steps.split.outputs._0 == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet pack RunnerTest/RunnerTest.csproj --configuration Release /p:Version=${{ steps.versionNumber.outputs.buildVersion }} --no-build --output .

    - name: Push
      if: steps.split.outputs._0 == 'main' || startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push **/*.nupkg --no-symbols --skip-duplicate --source github
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}

    - name: Cleanup Github Nuget Source
      if: always() && (steps.split.outputs._0 == 'main' || startsWith(github.ref, 'refs/tags/v'))
      continue-on-error: true
      run: dotnet nuget remove source github

  auto_merge_release_to_main:
    needs: build
    if: needs.build.outputs.branchName == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: main
          github_token: ${{ github.token }}
